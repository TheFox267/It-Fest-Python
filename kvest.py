# -*- coding: utf8 -*-
import os
import sys
import time

DEBUG = False

steps = {
    'start': """Сейчас около 9 утра и я уже в аэропорту Ухани в Китае. Прилетел около часа назад и никак не могу вызвать такси до отеля. Здесь вообще говорят по-английски?!


10 апреля 2019 года
На улице прекрасная погода и я собираюсь прогуляться, до этого несколько дней был ливень. Выбираю между походом на выставку технологий и просто прогулкой, все же склоняюсь ко второму.

12 апреля 2019 года
Погода радовала меня и два дня подряд я просто гулял по-невероятному Ухани. Как же здесь красиво! Зашел в какую-то забегаловку с традиционной кухней и попробовал летучую мышь. Оказалась по вкусу точно такой же как курица, только костлявее.

14 апреля 2019 года
Кажется я приболел, поднялась температура, кашель. """,
    '1': """Нужно вызвать врача, у меня где-то была визитка с нужным номером, наверняка это хорошее решение.""",
    '2': """Решительно настроившись, я собрался в  местный музей искусств. По дороге мне становилось все хуже и хуже.""",
    '3': """Номер подошел, но ждать врача было невыносимо и я провалился в сон. На утро в теле была ужасная слабость. Я не понимал, что мне делать. Спать больше не хотелось несмотря на отсутствие сил.""",
    '4': """Я принял решение вызвать врача, у меня как раз был нужный знакомый, нужно только найти его визитку.""",
    '5': """Я не обращал внимание на недомогания.
По возвращению в номер я был выжит как лимон, но доволен выставкой. Удивительно, что я не почувствовал ярко выраженного вкуса ванильного мороженного. """,
    '6': """Из-за усталости и неспособности больше функционировать нормально я лег спать.  На удивление проснулся я поздно. Все тело ломило, дикая слабость одолевала меня. Я провалился в сон еще на полтора часа. Проснувшись, самочувствие улучшилось, но сил было мало. Сегодня я принял решение остаться в стенах отеля и найти развлечения здесь.
Позавтракав, я резко стал чувствовать себя хуже. Игнорировать такие недомогания уже было сложно. Обратившись к администратору, я вызвал врача. Осталось его только дождаться в номере.""",
    '7': """Я заказал завтрак в номер и позвонил на ресепшен спросить про врача. Сегодня он должен подъехать.""",
    '8': """После завтрака мне удалось поспать еще пол часа. Пришел доктор. Диагноза мне так и не смогли поставить. Симптомы не похожи ни на одно другое заболевание. Отправили на обследование. Главным вопросом врача было со многими ли я контактировал за то время, что чувствую себя плохо и после чего моё состояние ухудшилось.
На утро следующего дня я отправился в поликлинику. Мне сказали одеть медицинскую маску во избежание лишних рисков заражения других людей.
После прохождения обследования и нескольких часов томительного ожидания врачи установили, что у меня некий коронавирус. Другие штампы такого вируса уже проявляли себя раньше, но как меня вылечить неизвестно. Как уберечь остальных тоже. А самое главное какое происхождение этого заболевания.""",
    '9': """После завтрака мне удалось поспать еще пол часа. Пришел доктор. Диагноза мне так и не смогли поставить. Симптомы не похожи ни на одно другое заболевание. Отправили на обследование. Главным вопросом врача было со многими ли я контактировал за то врем, что чувствую себя плохо и после чего моё состояние ухудшилось.
Сейчас я осознал какая ответственность на мне лежит. Я контактировал со многими людьми и теперь возможно все они также больны.
После прохождения обследования и нескольких часов томительного ожидания врачи установили, что у меня некий коронавирус. Другие штампы такого вируса уже проявляли себя раньше, но как меня вылечить неизвестно. Как уберечь остальных тоже. А самое главное какое происхождение этого заболевания.""",
    'final_first': """Благодаря моей осторожности вирус развивается медленно. Ухань закрыт на карантин. За пределы города вирус не распространился. Погибло несколько тысяч человек. Ученые разработали вакцину, сейчас по всему миру идет вакцинация.""",
    'final_second': """Благодаря моей неосторожности заражено много людей. Болезнь распространяется неимоверно быстро. В скором времени все страны закроют свои границы и случиться экономический кризис. От коронавируса погибнут миллионы людей. Ученые изобретут вакцину только через два года.""",
    'preface': """Вам предстоит пройти интересный квест про коронавирус. Чтобы ответить на вопрос, пишите вариант и нажимайте enter. Игра имеет не одну концовку, от Ваших действий зависит ход истрии! Чтобы выйти из игры, пишите "выйти"."""
}


def pretty_print(text: str):
    """
    Делать эффект печатной машинки в консоли
    :param text:
    :type text:
    """
    if not DEBUG:
        for item in text:
            print(item, end='')
            sys.stdout.flush()
            time.sleep(0.03)
            if item == ".":
                time.sleep(1)
        print("\n")
    else:
        print(text + '\n')


def answer(variants=3):
    """
    Сделать валидацию ответов пользователя
    :param variants:
    :type variants:
    :return: print(text)
    :rtype: str
    """
    while True:
        ans = input("Введите Ваш вариант: ").lower()
        if ans == 'выйти':
            sys.exit()
        else:
            try:
                if 1 <= int(ans) <= variants:
                    return int(ans)
                    break
                else:
                    print(f'Есть только {variants} варианта!')
            except ValueError:
                print("Это сообщение не распознается, введите другое.\n")


def cipher():
    """
    Мини-игра: номер администрации
    :return: print(text)
    :rtype: str
    """
    while True:
        pretty_print(
            "На визитке странные обозначения, нужно срочно разгадать шифр.\n\"A=1; B=2; C=3; D=4; E=5; F=6; G=7; H=8; I=9\"\nНужный номер: +G-DII-IEA-HD-DC (расшифруйте и введите по шаблону).")
        number = input("Номер: ")
        if number == '+7-499-951-84-43':
            break
        elif number == 'выход':
            sys.exit()
        else:
            pretty_print("Никто не берет трубку, наверняка это не правильный номер, нужно попробовать еще раз")
            clear()


def rules():
    """
    Мини-игра: что делать чтобы не заразить других людей?
    :return: print(text)
    :rtype: str
    """
    while True:
        pretty_print(
            "Что делать чтобы не заразить других людей?\nВарианты:\n1) Гулять с друзьями и стараться больше проводить времени в общественных местах.\n2) Сидеть дома и не контактировать с людьми.\n3) Ездить на автобусах и чихать не в платок, а на людей.")
        variant = answer()
        if variant == 2:
            break
        else:
            pretty_print("Это плохой совет, точно не нужно этого делать.")
            clear()


def start():
    """
    Начать игру
    :return: print(text)
    :rtype: str
    """
    pretty_print(steps['preface'])
    input('Нажмите "enter", если Вы готовы начать.')
    clear()
    pretty_print(steps['start'])
    print(
        "1) Остаться в отеле и обратиться за помощью.\n2) Пойти в музей искусств, не обращая внимания на недуг.\n3) Сходить в музей и обратиться к врачу позже")
    variant = answer()
    if variant == 1:
        clear()
        pretty_print(steps['1'])
        clear()
        cipher()
        fork()
    elif variant == 2 or variant == 3:
        clear()
        pretty_print(steps['2'])
        print("1) Вернуться в отель и обратиться за медицинской помощью.\n2) Продолжить прогулку, не обращая внимания.")
        variant = answer(2)
        if variant == 1:
            clear()
            pretty_print(steps['6'])
            fork()
        else:
            clear()
            pretty_print(steps['5'])
            clear()
            pretty_print(steps['6'])
            clear()
            pretty_print(steps['9'])
            clear()
            rules()
            final(2)


def fork():
    """
    Развилка сюжета
    :return: print(text)
    :rtype: str
    """
    clear()
    pretty_print(steps['3'])
    print("1) Заказать завтрак в номер.\n2) Пойти на завтрак в кафе в отеле.")
    variant = answer(2)
    if variant == 1:
        clear()
        pretty_print(steps['7'])
        clear()
        pretty_print(steps['8'])
        clear()
        rules()
        final(1)
    else:
        clear()
        pretty_print(steps['9'])
        clear()
        rules()
        final(2)


def final(var: int):
    """
    Финал игры
    :param var:
    :type var:
    :return: print(text)
    :rtype: str
    """
    clear()
    if var == 1:
        pretty_print(steps['final_first'])
    else:
        pretty_print(steps['final_second'])
    pretty_print("\nФИНАЛ, ИГРА ПРОЙДЕНА!")
    input("---- нажмите enter, чтобы выйти ----")


def clear():
    """
    Очистка консоли от мусора
    :return: command
    :rtype: 
    """
    return os.system('cls')


if __name__ == "__main__":
    clear()
    start()
